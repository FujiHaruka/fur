#!/usr/bin/env node

/**
 * fur bin script.
 */
'use strict'

const program = require('commander')
const pkg = require('../package')
const Fur = require('../lib/fur')
const co = require('co')

program
  .version(pkg[ 'version' ])

// =========================
// Handle `banner` command
// =========================
program
  .command("banner <filename>")
  .description("Generate a banner.")
  .option('-c, --color <color>', "Color expression string or color theme name.")
  .option('-s, --shape <shape>', "Banner style.")
  .option('-f, --font <font>', "Font file name or font theme name.")
  .option('-F, --font-size <fontSize>', "Size of font.")
  .option('-H, --height <height>', "Banner height.")
  .option('-o, --format <format>', "File format. 'svg' or 'png'.")
  .option('-t, --text <text>', "Banner text.")
  .option('-W, --width <width>', "Banner width.")
  .option('-v, --verbose', "Emit verbose log.")
  .action((filename, options) => {
    const fur = new Fur({})
    fur.banner(filename, options)
      .then(() => process.exit(0))
      .catch((e) => {
        console.error(e)
        process.exit(1)
      })
  })

// =========================
// Handle `favicon` command
// =========================
program
  .command("favicon <filename>")
  .description("Generate a favicon.")
  .option('-c, --color <color>', "Color expression string or color theme name.")
  .option('-f, --font <font>', "Font file name or font theme name.")
  .option('-F, --font-size <fontSize>', "Size of font.")
  .option('-S, --size <size>', "Favicon size.")
  .option('-s, --shape <shape>', "Banner style.")
  .option('-t, --text <text>', "Favicon text.")
  .option('-o, --format <format>', "File format. 'svg' or 'png'.")
  .option('-v, --verbose', "Emit verbose log.")
  .action((filename, options) => {
    const fur = new Fur({})
    fur.favicon(filename, options)
      .then(() => process.exit(0))
      .catch((e) => {
        console.error(e)
        process.exit(1)
      })
  })

program
  .parse(process.argv)

if (program.args.length === 0) {
  program.help()
}
